#!/usr/bin/env sh
# ______        ____  __   ____  _        _
#|  _ \ \      / /  \/  | / ___|| |_ __ _| |_ _   _ ___
#| | | \ \ /\ / /| |\/| | \___ \| __/ _` | __| | | / __|
#| |_| |\ V  V / | |  | |  ___) | || (_| | |_| |_| \__ \
#|____/  \_/\_/  |_|  |_| |____/ \__\__,_|\__|\__,_|___/
#
#Simple Program to set the Status for the DWM Bar.
#The Semi-colon separates the status into topbar and bootom bar texts.
#Network Monitor still needs some work.
#
#Dependencies -> nmcli, xbacklight, amixer, lm_sensors, curl.

#Get the connectivity params
getConnectionParams(){
	#interface=$(nmcli | grep 'connected to' | sed 's/://' | awk '{print $1}')
	interface=$(nmcli | awk -F: '/connected to/ {print $1}')
	#io=$(grep $interface /proc/net/dev | awk '{print "in="$2, "out="$10}')
	if [ $interface='wlo1' ]; then
		io=$(awk '/wlo1/ {print "inB="$2, "outB="$10}' /proc/net/dev)
	else
		io=$(awk '/lo/ {print "inB="$2, "outB="$10}' /proc/net/dev)
	fi
	eval $io
	now=$(date +%S)
	now=${now#0}
}

#Calculate Connection Speeds
calcSpeeds(){
	val=$1
	oldVal=$2
	currTimeNT=$3

	timeDiff=$(($currTimeNT-$oldTimeNT))
	if [ ! $timeDiff -eq 0 ]; then
    vel=$(echo "($val-$oldVal)/$timeDiff" | bc)
    #vel=${vel#-}
    if [ $vel -gt 1048576 ]; then
      vel=$(echo "scale=1;$vel/1048576" | bc)
      echo "$vel MB/s"
    elif [ $vel -gt 1024 ]; then
      vel=$(echo "scale=1;$vel/1024" | bc)
     echo "$vel KB/s"
	elif [ $vel -lt 1 ]; then
	echo "0 B/s"
    else
      echo "$vel B/s"
    fi
  else
    echo "0 B/s"
  fi
}

#Connection Details
getNetworkTraffic(){
	if nmcli | grep 'connected to' > /dev/null; then
		getConnectionParams
		in=$inB
		out=$outB
		currTimeNT=$now
		inSpeed=$(calcSpeeds $in $oldInB $currTimeNT)
		outSpeed=$(calcSpeeds $out $oldOutB $currTimeNT)

		oldInB=$in
		oldOutB=$out
		oldTimeNT=$currTimeNT

		if [ $interface="wlo1" ]; then
			cmd=$(nmcli device wifi list | awk '/^*/ {print "ssid="$3, "signal="$8}')
			eval $cmd
			#echo "Connection 🌏 : $ssid [$signal%] ⬆ $outSpeed ⬇ $inSpeed" #▲▼
			echo "Connection : $ssid [$signal%] ⬆ $outSpeed ⬇ $inSpeed" #▲▼

		else
			ssid=$(nmcli | awk '/connected/ {print $4 }')
			echo "Connection 🌏 : $ssid ⬆ $outSpeed ⬇ $inSpeed"
		fi
	else
		availConn=$(nmcli device wifi list | awk '$7 > 60' | wc -l)
		echo "Connection 🌏 : [$(expr $availConn - 1) *]"
	fi
}

#Get Brightness
getBacklight(){
	bcklit=$(xbacklight -get)
	bcklit=${bcklit%.*}
	echo "Screen ☀ : $bcklit%"
	#if [ $bcklit -le 50 ]; then
	#	echo "Screen ☀ : $bcklit% 🔅"
	#else
	#	echo "Screen ☀ : $bcklit% 🔆"
	#fi
}

#Volume Params
getVol(){
	if amixer get Master | grep '\[on\]' > /dev/null; then
		#echo Volume : $(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')%
		vol=$(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')
		if [ $vol -gt 0 ] && [ $vol -le 33 ]; then
			#echo "Vol : $vol% 🔈"
			echo "Vol : $vol% "
		elif [ $vol -gt 33 ] && [ $vol -le 66 ]; then
			#echo "Vol : $vol% 🔉"
			echo "Vol : $vol% "
		else
			#echo "Vol : $vol% 🔊"
			echo "Vol : $vol% "
		fi
	else
		echo Volume : --
		#echo "Vol : Mute 🔇 "
	fi
}

#Local current time
getTime(){
	#echo "🗓 $(date +%B\ %d\,\ %Y\ \ \🕛\ %T)" #\ %Z)"
	echo " $(date +%B\ %d\,\ %Y\ %T\ %Z)"
}

#Get the current Memory stats
getMemStats(){
	echo "Mem : $(free -h | awk '/^Mem/ {print $3 " / " $2}')"
}

#Battery Stats
getBatStats(){
	bat=$(acpi -b)
	if echo $bat | grep Full > /dev/null; then
		echo "Battery : 100%, ="
	elif echo $bat | grep Charging > /dev/null; then
		echo "Battery : $(echo $bat | awk '{print $4 " + (" $5 ")"}')"
	elif echo $bat | grep Discharging > /dev/null; then
		echo "Battery : $(echo $bat | awk '{print $4 " - (" $5 ")"}')"
	else
		echo "Battery : $(echo $bat |awk '{print $4 ", ?"}')"
	fi
}

#CPU Temp
getTemp(){
	echo Temp : $(sensors | awk '/^temp1/ {print $2 $3}')
	#echo "Temp  🌡 : $(sensors | awk '/^temp1/ {print $2 $3}')"
}

#CPU Load Avg
getLoad(){
	load=$(awk '{print $1}' /proc/loadavg)
	numOfCores=$(grep 'processor' /proc/cpuinfo | wc -l)
	loadAvg=$(echo "scale=2;($load/$numOfCores*100)" | bc)
	echo "CPU : $loadAvg%"
}

#Weather Report
getWeather(){
	if $(ping -q -c 1 1.1 > /dev/null);	then
		#wttr.in->>l=location, c=weather condition, C=wether condition text,
		#t=Temp, w=wind dir and speed, m=moonphase, M=moonday, p=precipitation/
		#location="Your,City"
		#report=$(curl wttr.in/$location\?format="%l:+%c+%C,+%t,+%w,+%m+%M")
		report=$(curl wttr.in\?format="%l:+%c+%C,+%t,+%w,+%m+%M")
		if (echo $report | grep "html" > /dev/null); then
			echo "** Weather Report Unavailable **"
		else
			echo $report
		fi
	else
		echo "** Network Unavailable **"
	fi
}

#Set Initial Values
getConnectionParams
oldInB=$inB
oldOutB=$outB
oldTimeNT=$now
oldTimeW=0

while true
do
	currTimeW=$(date +%M)
	currTimeW=${currTimeW#0}
	timeDiffW=$((currTimeW-oldTimeW))
	if [ $timeDiffW -gt 5 ] || $(echo $weather | grep Unavailable > /dev/null); then
		oldTimeW=$currTimeW
		weather=$(getWeather)
	fi

	xsetroot -name "$weather;$(getNetworkTraffic) | $(getBacklight) | $(getVol) | $(getTemp) | $(getLoad) | $(getMemStats) | $(getBatStats) | $(getTime)"
	sleep 1s;
done
