#!/usr/bin/env sh 
#
#__   __          _         _          
#\ \ / /__  _   _| |_ _   _| |__   ___ 
# \ V / _ \| | | | __| | | | '_ \ / _ \
#  | | (_) | |_| | |_| |_| | |_) |  __/
#  |_|\___/ \__,_|\__|\__,_|_.__/ \___|
#                                      
# ____                      _                 _           
#|  _ \  _____      ___ __ | | ___   __ _  __| | ___ _ __ 
#| | | |/ _ \ \ /\ / / '_ \| |/ _ \ / _` |/ _` |/ _ \ '__|
#| |_| | (_) \ V  V /| | | | | (_) | (_| | (_| |  __/ |   
#|____/ \___/ \_/\_/ |_| |_|_|\___/ \__,_|\__,_|\___|_|   
# 
#Simple Program to download Video/Audio(s) from Youtube.
#
#Dependencies - youtube-dl, dmenu[promptUser], notify-send

ytDL=/usr/bin/youtube-dl
notif=/usr/bin/notify-send
prompt=$HOME/bin/promptUser
dest=$HOME/Media/YTDownloads
url=$(xclip -selection primary -o)

[ -e $dest ] || mkdir -p $dest
cd $dest

[ -z "$url" ] && $notif "Nothing to Download" -u "normal" -t 3000 -a "⬇ Downloader" && exit 1
[ ! $(echo $url | grep -E '\.(com|org|net|in)') ] && $notif "Invalid Url." -u "critical" -t 3000 \
	-a "⬇ Downloader" && exit 1

[ $(echo $url | grep 'list') ] && 
	options="Download playlist\nDownload current video\nExtract audio from playlist\nExtract audio from current video" ||
	options="Download current video\nExtract audio from current video" 

format=$(echo -e $options | dmenu -i -l 5 -p "Select A Download Format :" | sed -E 's/[ \t]*$//g')

case $format in
	"Extract audio from playlist") 
		url=$(echo $url | cut -d "&" -f1-2)
		flags=" -xq --no-warnings --audio-format mp3 --audio-quality 0";;
	"Download playlist") 
		url=$(echo $url | cut -d "&" -f1-2)
		flags=" -q --no-warnings --format mp4 --audio-format mp3 --audio-quality 0";;
	"Extract audio from current video")
		url=$(echo $url | cut -d "&" -f1)
		flags=" -xq --no-warnings --audio-format mp3 --audio-quality 0";;
	"Download current video") 
		url=$(echo $url | cut -d "&" -f1)
		flags=" -q --no-warnings --format mp4 --audio-format mp3 --audio-quality 0";;
	*)
		$notif "Nothing To Download" "Bailing..." -u "normal" -t 3000 -a "⬇ Downloader"
		exit ;;
esac

title=$($ytDL --get-title $url) 
[ -z "$title" ] && $notif "Something's Wrong!!" "Bailing..." -u "critical" -t 3000 -a "⬇ Downloader" && 
	exit 1

$notif "Download Started" "$title" -u "normal" -t 3000 -a "⬇ Downloader"

$ytDL $flags $url
[ $? -eq 0 ] && $notif "Download Complete" "$title"  -u "normal" -t 3000 -a "⬇ Downloader" || 
	$notif "Download Failed" "$title" -u "critical" -t 3000 -a " ⬇ Downloader"

